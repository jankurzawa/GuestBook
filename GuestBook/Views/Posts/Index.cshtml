@model IEnumerable<GuestBook.Models.Post>

@{
    ViewData["Title"] = "Index";
}
<style>
    #pageDetails{
        display: flex;
        align-items: center;
        justify-content: space-between;
    }

    #pageDetails h1{
        justify-content: flex-start;
    }

    #pagination{
        display: inline-flex;
        justify-content: flex-end;
    }

    #numberOfVictims{
        display: flex;
        justify-content: flex-start;
        align-items: center;
    }

    #specificPageInput{
        margin-left: 17%;
        display: flex;
        align-items: center;
        justify-content: flex-end;
    }

    #specificPageInput input{
        width: 50px;
        height: 28px;
    }

</style>

<div id="pageDetails">  
    <h1>List of guests</h1> 
    
    <div id="pagination">   
        <div id="numberOfVictims">
            <a asp-action="PageDown"><</a>
            <h4 id="numberOfPage">1</h4>
            <a asp-action="PageUp">></a>
        </div>
        <div id="specificPageInput">
            <input type="text" id="numberOfPageInput" name="numberOfPage" cols="2" rows="1" data-role="page-number-input">
        </div>
    </div>
    
</div>
<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.CreateTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Content)
            </th>
            <th></th>
        </tr>
    </thead>
    <body>
@foreach (var item in GuestBook.Data.DAL.PostRepository.GetPage(1)) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.CreateTime)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Content)
            </td>
        </tr>
}
    </body>
    <script>
        let counterMinusElem = document.getElementById("leftArrow");
        let counterPlusElem = document.getElementById("rightArrow");
        let numberOfPage = document.getElementById("numberOfPage");
        let count = 1;
        let numberOfPages = Model.Count();
        
        counterMinusElem.addEventListener("click",()=>{
            count--;
            if (count < 1)
            {
                count = 1;
            }
            numberOfPage.innerHTML = count;
        )}
        counterPlusElem.addEventListener("click",()=>{
            count++;
            if (count > 3)
            {
                count = numberOfPages;
            }
            numberOfPage.innerHTML = count;
        )}
        function updateDisplay(){
            numberOfPage.innerHTML = count;
        };

        updateDisplay();
    </script>
</table>
